<!DOCTYPE html>
<html>
<head>
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<meta charset="utf-8">
<title>ADODB Action</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.0.1/css/bootstrap.min.css">
<style>
* {
	font-family: "メイリオ";
}
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>

var w = screen.width - 400;
var h = screen.height - 200;
top.resizeTo( w, h );
top.moveTo((screen.width-w)/2, (screen.height-h)/2 );

var WshShell = new ActiveXObject("WScript.Shell");

// ********************************************************
// ADO オブジェクト
// 3 : クライアント側カーソル
// https://docs.microsoft.com/ja-jp/sql/ado/reference/ado-api/cursorlocationenum
// ********************************************************
var cn = new ActiveXObject( "ADODB.Connection" );
cn.CursorLocation = 3;
var rs = new ActiveXObject( "ADODB.Recordset" );

var ExcelApp;
var workbook;
var worksheet1;

// ***********************
// このパスを変更
// ***********************
var db_path = "C:\\app\\workspace\\販売管理.accdb";
// ***********************

// ********************************************************
// https://www.microsoft.com/ja-jp/download/details.aspx?id=13255 ( ドライバ )
// 接続文字列 : ODBC用
// https://docs.microsoft.com/ja-jp/dotnet/api/system.data.odbc.odbcconnection.connectionstring
// https://dev.mysql.com/doc/connector-odbc/en/connector-odbc-configuration-connection-parameters.html
// ********************************************************
var connection_string;
connection_string = "Provider=MSDASQL;Driver={Microsoft Access Driver (*.mdb, *.accdb)};Dbq=" + db_path + ";";
// connection_string = "Driver={MySQL ODBC 8.0 Unicode Driver};Server=localhost;Database=lightbox;UID=root;PWD=;charset=cp932";
// ▼ 32ビット用 ODBC ドライバ( IEモードの Edge ではこれを使う )
// connection_string = "Provider=MSDASQL;Driver={Microsoft Access Driver (*.mdb)};Dbq=" + db_path + ";";

// ***********************
// 実行 SQL
// ***********************
var query = "";

// ***********************
// jQuery イベント処理
// ***********************
$(function(){

	$("#btn").on("click", function(){
		query = $("#query").val();
		$("h5").text( query );
		ADODB_Action();
	});

});


// ***********************
// DB から TABLE
// ***********************
function ADODB_Action() {

	// カレントディレクトリ
	var CurDir = location.pathname;
	CurDir = CurDir.replace("/", "");
	var aData = CurDir.split( "\\" );
	CurDir = CurDir.replace( "\\" + aData[ aData.length - 1 ], "" );
	// Edge では 直接 Apache の OS 側のパスを設定する
	// CurDir = "C:\\app\\web22";

	// Excel のアプリの起動
	ExcelApp = new ActiveXObject("Excel.Application");

	// Book
	var workbook;

	// 表示する
	ExcelApp.Visible = true;
	// 警告を出さないようにする
	ExcelApp.DisplayAlerts = false;

	// 開く
	workbook = ExcelApp.Workbooks.Open( CurDir + "\\テーブル設計.xlsx" );
	// 最大化
	ExcelApp.ActiveWindow.WindowState = -4137;

	workbook.Sheets("テーブル設計雛形").Copy( workbook.Sheets(1) );

	worksheet1 = workbook.Sheets(1)

	// =========================================================

	// テーブルデータのクリア
	$("#tbl").html("");
	$("#tbl_index").html("");

	// ***********************
	// DB 接続
	// ***********************
	cn.open( connection_string );

	// ***********************
	// レコードセット取得
	// ***********************
	// rs.open( query, cn );
	rs = cn.OpenSchema( 4, [,,query,] );
	rs.Sort = "ORDINAL_POSITION";
	rs.MoveFirst;

	var table_body = $("#tbl");
	var row_unit = $("<tr></tr>");

	// ***********************
	// タイトル部用、列名取得
	// ***********************
	for( loop_idx = 0; loop_idx < rs.fields.count; loop_idx++ ) {
		$("<th></th>")
			.text( rs.fields(loop_idx).name )
			.appendTo( row_unit );


	}
	row_unit.appendTo( table_body );

	var row = 6;
	// ***********************
	// 行取得ループ
	// ***********************
	while( !rs.EOF ) {

		// 行オブジェクト
		row_unit = $("<tr></tr>");

		for( loop_idx = 0; loop_idx < rs.fields.count; loop_idx++ ) {
			$("<td></td>")
				.text( rs.fields(loop_idx).value )
				.appendTo( row_unit );

			if ( rs.fields(loop_idx).name == "COLUMN_NAME" ) {
				setColumnTitle( rs.fields(loop_idx).value, 2, row );
			}

			if ( rs.fields(loop_idx).name == "DATA_TYPE" ) {
				var dtype = rs.fields(loop_idx).value;
				if ( dtype == 130 ) {
					setColumnTitle( "VARCHAR", 4, row );
				}
				if ( dtype == 3 ) {
					setColumnTitle( "INT", 4, row );
				}
				if ( dtype == 135 ) {
					setColumnTitle( "DATETIME", 4, row );
				}
			}

			if ( rs.fields(loop_idx).name == "CHARACTER_MAXIMUM_LENGTH" ) {
				var dlength = rs.fields(loop_idx).value;
				if ( dlength != null ) {
					setColumnTitle( dlength, 5, row );
				}
			}

		}
		row_unit.appendTo( table_body );

		// ***********************
		// 次の行を取得
		// ***********************
		rs.MoveNext();
		row++;
	}

	// ***********************
	// レコードセットを閉じる
	// ***********************
	rs.close();

	// ==================== インデックス ====================================

	rs = cn.OpenSchema( 12, [,,,,query] );
	rs.Sort = "ORDINAL_POSITION";
	rs.MoveFirst;

	var table_body = $("#tbl_index");
	var row_unit = $("<tr></tr>");

	// ***********************
	// タイトル部用、列名取得
	// ***********************
	for( loop_idx = 0; loop_idx < rs.fields.count; loop_idx++ ) {
		$("<th></th>")
			.text( rs.fields(loop_idx).name )
			.appendTo( row_unit );


	}
	row_unit.appendTo( table_body );

	var row = 6;
	// ***********************
	// 行取得ループ
	// ***********************
	while( !rs.EOF ) {

		if ( rs.fields("COLUMN_NAME").value != null ) {
			// 行オブジェクト
			row_unit = $("<tr></tr>");

			for( loop_idx = 0; loop_idx < rs.fields.count; loop_idx++ ) {
				$("<td></td>")
					.text( rs.fields(loop_idx).value )
					.appendTo( row_unit );

				if ( rs.fields(loop_idx).name == "ORDINAL_POSITION" ) {
					setColumnTitle( rs.fields(loop_idx).value, 8, row );
				}
				if ( rs.fields(loop_idx).name == "COLUMN_NAME" ) {
					setColumnTitle( rs.fields(loop_idx).value, 10, row );
				}

			}
			row_unit.appendTo( table_body );
		}

		// ***********************
		// 次の行を取得
		// ***********************
		rs.MoveNext();
		row++;
	}

	// ***********************
	// レコードセットを閉じる
	// ***********************
	rs.close();

	// ***********************
	// 接続解除
	// ***********************
	cn.close();

	// **************************************
	// DB 処理( ここまで )
	// **************************************

	var key_row = 6;
	// 列データの転送処理
	// src target : 行 row : 列 col
	for (let src_row = 6; src_row <= 70; src_row++) {
		var src = getColumnTitle( 2, src_row );
		if( src + "" == "" ) {
			break;
		}
		for (let target_row = 7; target_row <= 70; target_row++) {
			var target = getColumnTitle( 10, target_row );
			if( target + "" == "" ) {
				break;
			}

			if ( src + "" == target + "" ) {
				key_num = getColumnTitle( 8, target_row );
				setColumnTitle( key_num, 11, key_row );
				key_row++;
				break;
			}

		}
	}
	// KEY 情報をクリア
	worksheet1.Range("H7:J36").ClearContents();

	// =========================================================

	// workbook.Saved = true;
	workbook.Save();

	workbook.Close();

	// アプリを終了
	ExcelQuit();

	WshShell.Run("taskkill /F /IM excel.exe", 0, true);

	WshShell.Run( "RunDLL32.EXE shell32.dll,ShellExec_RunDLL " + CurDir + "\\テーブル設計.xlsx" );
}

// **************************************
// Excel のセルに列名一覧をセット
// **************************************
function setColumnTitle( title, x, y ) {

	worksheet1.Cells( y, x ) = title;

}
// **************************************
// Excel のセルに列名一覧を取得
// **************************************
function getColumnTitle( x, y ) {

	return( worksheet1.Cells( y, x ) );

}



// ****************************
// JavaScript による
// Excel の完全終了処理
// ****************************
var idTmr = "";
function ExcelQuit() {
	ExcelApp.Quit();
	ExcelApp = null;
	idTmr = window.setTimeout("Cleanup();",1);
}
function Cleanup() {
	window.clearInterval(idTmr);
	CollectGarbage();
}

// Access データ型サンプル
// create table [テーブルデータ型] (
// 	[通常1文字列130] VARCHAR(4)
// 	,[通常2文字列130] CHAR(4)
// 	,[テキスト130] MEMO
// 	,[整数2] SMALLINT
// 	,[整数3] INT
// 	,[BOOL11] YESNO
// 	,[整数17] BYTE
// 	,[数5] NUMBER
// 	,[数131] DECIMAL
// 	,[数値4] REAL
// 	,[数6] MONEY
// 	,[自動番号3] COUNTER
// 	,[日付7] DATETIME
// )
</script>
</head>
<body>
<h5 class="alert alert-primary">入力テーブルをテーブル表示</h5>
<div id="content" class="m-4">

	<input type="text" id="query" class="form-control" value="取引データ">
	<input type="button" value="実行" id="btn" class="mt-4 form-control btn btn-secondary" style="width:200px;">

	<table class="table table-bordered table-striped mt-4">
		<!-- bootstrap 対応の為、tbody に対して処理 -->
		<tbody id="tbl">
		</tbody>
	</table>

	<table class="table table-bordered table-striped mt-4">
		<!-- bootstrap 対応の為、tbody に対して処理 -->
		<tbody id="tbl_index">
		</tbody>
	</table>

</div>
</body>
</html>
